Answer these questions about the state machine above.
How many bits for the state will you need?
2
How many input bits will you need?
4
Then, map states to bits, and map inputs to bits.
State 1: 0 even, 1 even | 00
State 2: 0 odd, 1 even | 01
State 3: 0 odd, 1 odd | 10
State 4: 0 even , 1 odd | 11

Write out a state-transition table.
current state   | input | Exit State
State 1         | 0   | State 2
State 1         | 1   | State 4
State 2         | 0   | State 1
State 2         | 1   | State 3
State 3         | 0   | State 4
State 3         | 1   | State 3
State 4         | 0   | State 3
State 4         | 1   | State 1

Finally, program a ROM to do said thing.


Part B.

Answer these questions about the state machine above.

List all possible inputs. How many do we have?
  There is Dime, Nickel, Quarter. So we have 3 inputs
List all possible states. How many do we have?
  O cents, 5 cents, 10 cents, 15 cents, 20 cents, 25 cents. 6 States in total
How many bits for state will you need?
  3 bits per state.
How many input bits will you need?

Then, map states to bits, and map inputs to bits.

Write out a state-transition table. Since 25 cents is the final state, what happens if we get extra currency? Or, what happens if we get foreign currency? Feel free to transition to a "bogus" state (or states) for these purposes.

How many bits will we need for ROM address?

How many bits will we need for ROM data?

Finally, use a ROM to implement said thing.

When you are done, save your work and do the following:
